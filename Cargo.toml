[package]
name = "anchor-coverage"
version = "0.1.0"
authors = ["Samuel Moelius <sam@moeli.us>"]
description = "A wrapper around `anchor test` for computing test coverage"
edition = "2024"
license = "AGPL-3.0"
repository = "https://github.com/trailofbits/anchor-coverage"

[dependencies]
addr2line = "0.24"
anyhow = "1.0"
byteorder = "1.5"
cargo_metadata = "0.19"

# smoelius: Dependencies needed for `__anchor_cli`.
anchor-client = { version = "0.31", optional = true }
anchor-lang = { version = "0.31", optional = true }
anchor-lang-idl = { version = "0.1", features = ["build"], optional = true }
cargo_toml = { version = "0.22", optional = true }
clap = { version = "4.5", features = ["derive"], optional = true }
dirs = { version = "6.0", optional = true }
heck = { version = "0.5", optional = true }
regex = { version = "1.11", optional = true }
reqwest = { version = "0.12", optional = true }
serde = { version = "1.0", optional = true }
serde_json = { version = "1.0", optional = true }
shellexpand = { version = "3.1", optional = true }
solana-cli-config = { version = "=2.1", optional = true }
solana-sdk = { version = "=2.1", optional = true }
solang-parser = { version = "0.3", optional = true }
toml = { version = "0.8", optional = true }
walkdir = { version = "2.5", optional = true }

[dev-dependencies]
assert_cmd = "2.0"
ctor = "0.4"
lcov = "0.8"
regex = "1.11"
tempfile = "3.20"

[features]
default = ["__anchor_cli"]
__anchor_cli = [
    "anchor-client",
    "anchor-lang",
    "anchor-lang-idl",
    "cargo_toml",
    "clap",
    "dirs",
    "heck",
    "reqwest",
    "regex",
    "serde",
    "serde_json",
    "shellexpand",
    "solana-cli-config",
    "solana-sdk",
    "solang-parser",
    "toml",
    "walkdir",
]

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
missing-errors-doc = "allow"
missing-panics-doc = "allow"

[lints.rust.unexpected_cfgs]
level = "deny"
check-cfg = ["cfg(dylint_lib, values(any()))"]

[workspace.metadata.dylint]
libraries = [
    { git = "https://github.com/trailofbits/dylint", pattern = "examples/restriction/inconsistent_qualification" },
]
